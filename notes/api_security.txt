All things API Security

API Tools needed:
	git
	python3
	golang
	FoxyProxy
		Browser Extension
			Postman config: 127.0.0.1:5555
			Burp Config: 127.0.0.1:8080
	BurpSuite (Professional recommended)
		https://portswigger.net/burp
		Extensions:
			Autorize
			JSON Web Tokens
			InQL Scanner
			IP Rotate
			Bypass WAF
			autowasp
			OpenAPI Parser
	kiterunner
		git clone https://github.com/assetnote/kiterunner.git
		follow README for install instructions
		mkdir -p ~/api/wordlists
		Download wordlists from https://wordlists-cdn.assetnote.io
	amass
		apt install amass
		mkdir ~/.config/amass
		curl https://raw.githubusercontent.com/OWASP/Amass/master/examples/config.ini > ~/.config/amass/config.ini
	nikto
	wfuzz
	ZAP
	Arjun
		https://github.com/s0md3v/Arjun.git
	Postman
		https://www.postman.com/
		Install
			wget -c https://dl.pstmn.io/download/latest/linux_64 -O postman-linux-x64.tar.gz
			sudo tar -zxvf postman-linux-x64.tar.gz -C /opt/
			sudo ln -s /opt/Postman/Postman /usr/bin/Postman
		Setup
			Far left nav bar, make sure you are in a Collection
			Top "Overview" Bar, hit the "+" for a new Request
	
		Environment Variables
			While in your "Request, look at the top right "No Environment". Click it and hit "Cntrl+N".
				Click on "Environment"
				Environment variables are used to persist across APIs. Think of "Global Reviews".
	Common User Passwords Profiler (CUPP)
		https://github.com/Mebus/cupp
	Mentalist
		https://github.com/sc0tfree/mentalist
	JWT Tool
		https://github.com/ticarpi/jwt_tool

	mitmweb
		Make sure to import the CA certificate using website "mitm.it"
			https://docs.mitmproxy.org/stable/concepts-certificates/
		Save the "flow" file to work with mitmproxy2swagger
	mitmproxy2swagger
		This one is very useful. Follow the readme on github to get up and running
			https://github.com/alufers/mitmproxy2swagger
		Using the "flow" file from mitmweb, example:
			mitmproxy2swagger -i flows -o spec.yaml -p https://subdomain.domain.com/api/v1 -f flow
		Now open a text editor, keeping all lines found, remove "ignore:" from lines we want to keep for our api testing.
		Rerun the same mitmproxy2swagger command above. This will update the "spec.yaml" file for use with swagger.
		Visit the following website to import your spec.yaml file. This will help visualize the API.
			https://editor.swagger.io/
